package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/PICT-LibraryAutomation/granthpal/graph"
)

// Authors is the resolver for the authors field.
func (r *bookMetadataResolver) Authors(ctx context.Context, obj *graph.BookMetadata) ([]*graph.Author, error) {
	panic(fmt.Errorf("not implemented: Authors - authors"))
}

// Publication is the resolver for the publication field.
func (r *bookMetadataResolver) Publication(ctx context.Context, obj *graph.BookMetadata) (*graph.Publication, error) {
	panic(fmt.Errorf("not implemented: Publication - publication"))
}

// CreateBookMeta is the resolver for the createBookMeta field.
func (r *mutationResolver) CreateBookMeta(ctx context.Context, inp graph.CreateBookMetadataInp) (*graph.BookMetadata, error) {
	panic(fmt.Errorf("not implemented: CreateBookMeta - createBookMeta"))
}

// DeleteBookMeta is the resolver for the deleteBookMeta field.
func (r *mutationResolver) DeleteBookMeta(ctx context.Context, id string) (*string, error) {
	panic(fmt.Errorf("not implemented: DeleteBookMeta - deleteBookMeta"))
}

// UpdateBookMeta is the resolver for the updateBookMeta field.
func (r *mutationResolver) UpdateBookMeta(ctx context.Context, inp graph.UpdateBookMetadataInp) (*graph.BookMetadata, error) {
	panic(fmt.Errorf("not implemented: UpdateBookMeta - updateBookMeta"))
}

// BookMeta is the resolver for the bookMeta field.
func (r *queryResolver) BookMeta(ctx context.Context, id string) (*graph.BookMetadata, error) {
	panic(fmt.Errorf("not implemented: BookMeta - bookMeta"))
}

// BookMetas is the resolver for the bookMetas field.
func (r *queryResolver) BookMetas(ctx context.Context) ([]*graph.BookMetadata, error) {
	panic(fmt.Errorf("not implemented: BookMetas - bookMetas"))
}

// BookMetadata returns graph.BookMetadataResolver implementation.
func (r *Resolver) BookMetadata() graph.BookMetadataResolver { return &bookMetadataResolver{r} }

type bookMetadataResolver struct{ *Resolver }
