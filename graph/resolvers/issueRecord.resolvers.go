package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/PICT-LibraryAutomation/granthpal/graph"
)

// User is the resolver for the user field.
func (r *issueRecordResolver) User(ctx context.Context, obj *graph.IssueRecord) (*graph.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Book is the resolver for the book field.
func (r *issueRecordResolver) Book(ctx context.Context, obj *graph.IssueRecord) (*graph.Book, error) {
	panic(fmt.Errorf("not implemented: Book - book"))
}

// Payment is the resolver for the payment field.
func (r *issueRecordResolver) Payment(ctx context.Context, obj *graph.IssueRecord) (*graph.Payment, error) {
	panic(fmt.Errorf("not implemented: Payment - payment"))
}

// IssueBook is the resolver for the issueBook field.
func (r *mutationResolver) IssueBook(ctx context.Context, inp graph.IssueBookInp) (*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: IssueBook - issueBook"))
}

// ReturnBook is the resolver for the returnBook field.
func (r *mutationResolver) ReturnBook(ctx context.Context, bookID string) (*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: ReturnBook - returnBook"))
}

// RenewBook is the resolver for the renewBook field.
func (r *mutationResolver) RenewBook(ctx context.Context, bookID string) (*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: RenewBook - renewBook"))
}

// IssueRecord is the resolver for the issueRecord field.
func (r *queryResolver) IssueRecord(ctx context.Context, id string) (*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: IssueRecord - issueRecord"))
}

// IssueRecords is the resolver for the issueRecords field.
func (r *queryResolver) IssueRecords(ctx context.Context) ([]*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: IssueRecords - issueRecords"))
}

// IssueRecord returns graph.IssueRecordResolver implementation.
func (r *Resolver) IssueRecord() graph.IssueRecordResolver { return &issueRecordResolver{r} }

type issueRecordResolver struct{ *Resolver }
