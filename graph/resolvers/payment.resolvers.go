package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.45

import (
	"context"
	"fmt"

	"github.com/PICT-LibraryAutomation/granthpal/graph"
)

// CreatePayment is the resolver for the createPayment field.
func (r *mutationResolver) CreatePayment(ctx context.Context, inp graph.CreatePaymentInp) (*graph.Payment, error) {
	panic(fmt.Errorf("not implemented: CreatePayment - createPayment"))
}

// ResolvePayment is the resolver for the resolvePayment field.
func (r *mutationResolver) ResolvePayment(ctx context.Context, id string) (*string, error) {
	panic(fmt.Errorf("not implemented: ResolvePayment - resolvePayment"))
}

// User is the resolver for the user field.
func (r *paymentResolver) User(ctx context.Context, obj *graph.Payment) (*graph.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// IssueRecord is the resolver for the issueRecord field.
func (r *paymentResolver) IssueRecord(ctx context.Context, obj *graph.Payment) (*graph.IssueRecord, error) {
	panic(fmt.Errorf("not implemented: IssueRecord - issueRecord"))
}

// Payment is the resolver for the payment field.
func (r *queryResolver) Payment(ctx context.Context, id string) (*graph.Payment, error) {
	panic(fmt.Errorf("not implemented: Payment - payment"))
}

// Payments is the resolver for the payments field.
func (r *queryResolver) Payments(ctx context.Context) ([]*graph.Payment, error) {
	panic(fmt.Errorf("not implemented: Payments - payments"))
}

// UserPayments is the resolver for the userPayments field.
func (r *queryResolver) UserPayments(ctx context.Context, userID string) ([]*graph.Payment, error) {
	panic(fmt.Errorf("not implemented: UserPayments - userPayments"))
}

// Payment returns graph.PaymentResolver implementation.
func (r *Resolver) Payment() graph.PaymentResolver { return &paymentResolver{r} }

type paymentResolver struct{ *Resolver }
